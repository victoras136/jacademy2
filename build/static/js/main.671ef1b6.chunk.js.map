{"version":3,"sources":["axiosConfig.js","services/EmployeeService.js","components/ListEmployeeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/CreateEmployeeComponent.js","components/ViewEmployeeComponent.js","Welcome.js","components/AboutUs.js","App.js","serviceWorker.js","index.js"],"names":["axiosConfig","baseURL","baseUrl","window","location","href","slice","search","length","getBaseUrl","axiosInstance","axios","create","getEmployees","get","getEmployeeById","employeeId","concat","ListEmployeeComponent","_useState","useState","_useState2","_slicedToArray","employees","setEmployees","history","useHistory","removeEmployee","id","delete","then","res","data","useEffect","React","createElement","className","onClick","push","map","employee","key","firstName","lastName","emailId","style","marginLeft","HeaderComponent","showMenu","setShowMenu","top","zIndex","backgroundColor","type","display","Link","to","FooterComponent","CreateEmployeeComponent","useParams","setEmployee","isAddMode","fetchedEmployee","handleInputChange","e","_e$target","target","name","value","_objectSpread","_defineProperty","onSubmit","preventDefault","console","log","post","createEmployee","put","updateEmployeeById","placeholder","required","onChange","ViewEmployeeComponent","Welcome","src","alt","height","teamMembers","role","imageUrl","AboutUs","member","width","whiteSpace","App","Router","Switch","Route","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.671ef1b6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst getBaseUrl = () => {\r\n  // custom base URL logic examples:\r\n  // - to request a current URL without the search parameters part:\r\n  let baseUrl = window.location.href.slice(0, -window.location.search.length);\r\n\r\n  // ensure slash at the end\r\n  if (baseUrl[baseUrl.length - 1] !== '/') baseUrl = baseUrl + '/';\r\n\r\n  return baseUrl;\r\n};\r\n\r\nconst axiosConfig = {\r\n  baseURL: getBaseUrl(),\r\n};\r\n\r\nexport const axiosInstance = axios.create(axiosConfig);","import {axiosInstance} from \"../axiosConfig\";\r\n\r\nconst EMPLOYEE_API_BASE_URL = \"api/v1/employees\";\r\n\r\nexport const getEmployees = () => {\r\n    return axiosInstance.get(EMPLOYEE_API_BASE_URL);\r\n}\r\n\r\nexport const createEmployee = (employee) => {\r\n    return axiosInstance.post(EMPLOYEE_API_BASE_URL, employee);\r\n}\r\n\r\nexport const getEmployeeById = (employeeId) => {\r\n    return axiosInstance.get(`${EMPLOYEE_API_BASE_URL}/${employeeId}`);\r\n}\r\n\r\nexport const updateEmployeeById = (employee, employeeId) => {\r\n    return axiosInstance.put(`${EMPLOYEE_API_BASE_URL}/${employeeId}`, employee);\r\n}\r\n\r\nexport const deleteEmployeeById = (employeeId) => {\r\n    return axiosInstance.delete(`${EMPLOYEE_API_BASE_URL}/${employeeId}`);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {getEmployees, deleteEmployeeById} from '../services/EmployeeService'\r\n\r\nconst ListEmployeeComponent = () => {\r\n    const [employees, setEmployees] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const removeEmployee = (id) => {\r\n        deleteEmployeeById(id).then(() => {\r\n            getEmployees().then((res) => {\r\n                setEmployees(res.data);\r\n            });\r\n        });\r\n    }\r\n\r\n    const viewEmployee = (id) => {\r\n        history.push(`/view-employee/${id}`);\r\n    }\r\n\r\n    const editEmployee = (id) => {\r\n        history.push(`/add-employee/${id}`);\r\n    }\r\n\r\n    const addEmployee = () => {\r\n        history.push('/add-employee/_add');\r\n    }\r\n\r\n    useEffect(() => {\r\n        getEmployees().then((res) => {\r\n            setEmployees(res.data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-center\">Employees List</h2>\r\n            <div className=\"row\">\r\n                <button className=\"btn btn-primary\" onClick={addEmployee}>Add Employee</button>\r\n            </div>\r\n            <br />\r\n            <div className=\"row\">\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Employee First Name</th>\r\n                        <th>Employee Last Name</th>\r\n                        <th>Employee Email ID</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {employees.map(employee => (\r\n                        <tr key={employee.id}>\r\n                            <td>{employee.firstName}</td>\r\n                            <td>{employee.lastName}</td>\r\n                            <td>{employee.emailId}</td>\r\n                            <td>\r\n                                <button style={{ marginLeft: \"10px\" }} onClick={() => viewEmployee(employee.id)} className=\"btn btn-secondary\">View</button>\r\n                                <button style={{ marginLeft: \"10px\" }} onClick={() => editEmployee(employee.id)} className=\"btn btn-info\">Update</button>\r\n                                <button style={{ marginLeft: \"10px\" }} onClick={() => removeEmployee(employee.id)} className=\"btn btn-danger\">Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListEmployeeComponent;\r\n\r\n","import React, {useState} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst HeaderComponent = () => {\r\n\r\n  const [showMenu, setShowMenu] = useState(false);\r\n\r\n  return (\r\n      <div className=\"position-sticky\" style={{top: 0, zIndex: 1}}>\r\n        <header className=\"py-3\" style={{backgroundColor: \"#E88D14\"}}>\r\n          <nav className=\"navbar navbar-expand-md navbar-dark\">\r\n            <div className=\"container\">\r\n              <a href=\"https://pwc.com\" className=\"navbar-brand\">Employee Management System</a>\r\n              <button className=\"navbar-toggler\" type=\"button\" onClick={() => setShowMenu(!showMenu)}>\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div style={showMenu ? {display: \"block\"} : {display: \"none\"}} className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav ms-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/employees\" className=\"nav-link\">Employees</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/about\" className=\"nav-link\">About Us</Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import React from 'react'\r\n\r\nconst FooterComponent = () => {\r\n  return (\r\n      <footer className=\"bg-dark text-light py-3 footer\">\r\n        <div className=\"container text-center\">\r\n          <span className=\"text-muted\">All Rights Reserved 2023 @ PwC Greece VICTOR</span>\r\n        </div>\r\n      </footer>\r\n  );\r\n}\r\n\r\nexport default FooterComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport {\r\n    createEmployee,\r\n    getEmployeeById,\r\n    updateEmployeeById\r\n} from '../services/EmployeeService';\r\n\r\nconst CreateEmployeeComponent = () => {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [employee, setEmployee] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        emailId: '',\r\n    });\r\n\r\n    const isAddMode = id === '_add';\r\n\r\n    useEffect(() => {\r\n        if (!isAddMode) {\r\n            getEmployeeById(id).then((res) => {\r\n                const fetchedEmployee = res.data;\r\n                setEmployee(fetchedEmployee);\r\n            });\r\n        }\r\n    }, [id, isAddMode]);\r\n\r\n    const saveOrUpdateEmployee = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"isAddMode:\", isAddMode); // Add this line to log isAddMode\r\n\r\n        const { firstName, lastName, emailId } = employee;\r\n\r\n        if (isAddMode) {\r\n            createEmployee({ firstName, lastName, emailId }).then(() => {\r\n                history.push('/employees');\r\n            });\r\n        } else {\r\n            updateEmployeeById(employee, id).then(() => {\r\n                history.push(`/employees/${id}`);\r\n            });\r\n        }\r\n    };\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setEmployee({ ...employee, [name]: value });\r\n    };\r\n\r\n    const cancel = () => {\r\n        history.push('/employees');\r\n    };\r\n\r\n    const getTitle = () => {\r\n        return isAddMode ? <h3 className=\"mt-3 text-center\">Add Employee</h3> : <h3 className=\"mt-3 text-center\">Update Employee</h3>;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        {getTitle()}\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={saveOrUpdateEmployee}>\r\n                                <div className=\"form-group\">\r\n                                    <label>First Name:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={employee.firstName}\r\n                                        onChange={handleInputChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Last Name:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={employee.lastName}\r\n                                        onChange={handleInputChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Email ID:</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"emailId\"\r\n                                        placeholder=\"Email Address\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={employee.emailId}\r\n                                        onChange={handleInputChange}\r\n                                    />\r\n                                </div>\r\n                                <input type=\"submit\"\r\n                                       className=\"btn btn-success\"\r\n                                       value=\"Save\"\r\n                                />\r\n                                <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={cancel}\r\n                                    style={{ marginLeft: \"10px\" }}\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateEmployeeComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {getEmployeeById} from '../services/EmployeeService';\r\n\r\nconst ViewEmployeeComponent = () => {\r\n    const { id } = useParams();\r\n    const [employee, setEmployee] = useState({});\r\n\r\n    useEffect(() => {\r\n        getEmployeeById(id).then((res) => {\r\n            setEmployee(res.data);\r\n        });\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <div className=\"card col-md-6 offset-md-3\">\r\n                <h3 className=\"text-center mt-3\">View Employee Details</h3>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <label>Employee First Name:&nbsp;</label>\r\n                        <div>{employee.firstName}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <label>Employee Last Name:&nbsp;</label>\r\n                        <div>{employee.lastName}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <label>Employee Email ID:&nbsp;</label>\r\n                        <div>{employee.emailId}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewEmployeeComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Welcome.css';\r\n\r\nconst Welcome = () => {\r\n  return (\r\n      <div className=\"welcome-container\">\r\n        <div className=\"welcome-content\">\r\n          <img\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/PricewaterhouseCoopers_Logo.svg/633px-PricewaterhouseCoopers_Logo.svg.png\"\r\n              alt=\"PwC Java Academy Logo\"\r\n              className=\"mb-4\"\r\n              height={\"150px\"}\r\n          />\r\n          <h1 className=\"mb-4\">Welcome to PwC Java Academy</h1>\r\n          <p className=\"mb-4\">Explore the Future of Employee Management</p>\r\n          <Link to=\"/employees\" className=\"btn btn-primary btn-lg\">\r\n            Get Started\r\n          </Link>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;","import React from 'react';\r\nimport './AboutUs.css';\r\n\r\nconst teamMembers = [\r\n  {\r\n    name: 'Skitsas\\nIoannis',\r\n    role: 'Senior Manager',\r\n    imageUrl: 'https://lh3.googleusercontent.com/a-/ALV-UjXgSnyd7vR8nAsPCDGx2_YPfCKCPUbvLWOfws_h1tIFlg=s480-p-k-rw-no',\r\n    id: 1,\r\n  },\r\n  {\r\n    name: 'Tsigkounis\\nKonstantinos',\r\n    role: 'Senior Associate',\r\n    imageUrl: 'https://lh3.googleusercontent.com/a-/ALV-UjXuvhFcxJLg1JtMZdWP6cJ2Cp6FUpaLt8OJOuwY2iKoKnM=s480-p-k-rw-no',\r\n    id: 2,\r\n  },\r\n  {\r\n    name: 'Marakos\\nKonstantinos',\r\n    role: 'Senior Associate',\r\n    imageUrl: 'https://lh3.googleusercontent.com/a-/ALV-UjVEsRLYZZYG1yitZq0mtz7HJIlIyX8ItyWHwb4ftLqI7Q=s480-p-k-rw-no',\r\n    id: 3,\r\n  },\r\n  {\r\n    name: 'Kirmizis\\nThanasis',\r\n    role: 'Associate',\r\n    imageUrl: 'https://lh3.googleusercontent.com/a/ACg8ocJjjdEw-rdkejz6wjuniSOe-WlHXKJD0S-z-BzpCtcvFw=s480-p-k-rw-no',\r\n    id: 4,\r\n  },\r\n];\r\n\r\nconst AboutUs = () => {\r\n  return (\r\n      <div className=\"container my-5 about-us-content\">\r\n        <h2 className=\"mb-4\">About Us</h2>\r\n        <p className=\"mb-1\">\r\n          Welcome to the vibrant world of the Enterprise Digital team at PwC Greece! We are a diverse group of skilled developers and software engineers, each bringing unique experiences and passions to the table. At our core, we share an unwavering enthusiasm for coding and a commitment to crafting top-notch software.\r\n        </p>\r\n        <p className=\"mb-1\">\r\n          Patra holds a special place in our hearts, and we are deeply invested in nurturing a thriving community of software engineers among the students there. Our dream is to see the student community flourish, empowered by the knowledge and skills gained from this academy.\r\n        </p>\r\n        <p className=\"mb-1\">\r\n          We invite you to embark on this enriching journey with us. Dive into the world of coding, explore the endless possibilities, and let your creativity soar. This academy is not just a learning platform; it's a space where dreams take shape, ideas come to life, and friendships are forged.\r\n        </p>\r\n        <p className=\"mb-5\">\r\n          Happy coding! 🚀✨\r\n        </p>\r\n\r\n        <h2 className=\"mb-4\">Meet Our Team</h2>\r\n        <div className=\"row\">\r\n          {teamMembers.map(member => (\r\n              <div className=\"col-lg-3 col-md-6 mb-4\" key={member.id}>\r\n                <div className=\"text-center\">\r\n                  <img src={member.imageUrl} alt={member.name} className=\"rounded-circle mb-3\" style={{ width: '150px' }} />\r\n                  <h4 style={{whiteSpace: \"pre-wrap\"}}>{member.name}</h4>\r\n                  <p className=\"text-muted\">{member.role}</p>\r\n                </div>\r\n              </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AboutUs;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport ListEmployeeComponent from './components/ListEmployeeComponent';\r\nimport HeaderComponent from './components/HeaderComponent';\r\nimport FooterComponent from './components/FooterComponent';\r\nimport CreateEmployeeComponent from './components/CreateEmployeeComponent';\r\nimport ViewEmployeeComponent from './components/ViewEmployeeComponent';\r\nimport Welcome from \"./Welcome\";\r\nimport AboutUs from \"./components/AboutUs\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n        <Router>\r\n              <HeaderComponent />\r\n                <div className=\"container app-container\">\r\n                    <Switch> \r\n                          <Route path = \"/\" exact component = {Welcome}></Route>\r\n                          <Route path = \"/about\" component = {AboutUs}></Route>\r\n                          <Route path = \"/employees\" component = {ListEmployeeComponent}></Route>\r\n                          <Route path = \"/add-employee/:id\" component = {CreateEmployeeComponent}></Route>\r\n                          <Route path = \"/view-employee/:id\" component = {ViewEmployeeComponent}></Route>\r\n                    </Switch>\r\n                </div>\r\n              <FooterComponent />\r\n        </Router>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}